generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id() @default(uuid())
  name       String
  username   String
  password   String
  permission String
  avatar     String?
  status     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()
}

model Client {
  id                 String     @id() @default(uuid())
  name               String
  socialName         String
  document           String
  cep                String
  addressState       String
  addressCity        String
  addressStreet      String
  addressNumber      String
  addressDistrict    String
  clientCode         String
  phoneNumber        String
  cellphoneNumber    String
  email              String
  avatar             String?
  avatar_url         String?
  status             Boolean    @default(true)
  contractorName     String
  contractorDocument String
  Plans              Plans?     @relation(fields: [plansId], references: [id])
  plansId            String?
  payments           Payments[]
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt()
}

model Plans {
  id          String     @id() @default(uuid())
  name        String
  description String?
  itens       String[]
  dueDays     String
  value       Float
  client      Client[]
  payments    Payments[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt()
}

model Payments {
  id                   String    @id() @default(uuid())
  Plans                Plans     @relation(fields: [plansId], references: [id])
  plansId              String
  Client               Client    @relation(fields: [clientId], references: [id])
  clientId             String
  dueDate              DateTime
  paymentQRCode        String?
  paymentQRCodeText    String?
  paymentQRCodePrice   Float?
  paymentQRCodeDueDate DateTime?
  status               Boolean   @default(false)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt()
}
